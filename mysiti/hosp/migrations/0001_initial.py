# Generated by Django 5.1.4 on 2025-01-06 06:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('администратор', 'администратор'), ('пациент', 'пациент'), ('врач', 'врач')], default='пациент', max_length=43)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_image/')),
                ('address', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NationalHospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hospital_name', models.CharField(max_length=43)),
                ('pharmacy', models.URLField(blank=True, null=True)),
                ('doctors', models.URLField(blank=True, null=True)),
                ('appointment', models.URLField(blank=True, null=True)),
                ('medical_record', models.URLField(blank=True, null=True)),
                ('wards', models.URLField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('address_ru', models.TextField(blank=True, null=True)),
                ('address_en', models.TextField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('news', models.TextField(blank=True, null=True)),
                ('news_ru', models.TextField(blank=True, null=True)),
                ('news_en', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('specialty', models.CharField(choices=[('Врач-кардиолог', 'Врач-кардиолог'), ('Врач-отоларинголог', 'Врач-отоларинголог'), ('Врач-терапевт', 'Врач-терапевт'), ('Врач-терапевт госпитального отделения', 'Врач-терапевт госпитального отделения'), ('Врач мануальной терапии', 'Врач мануальной терапии'), ('Врач-рефлексотерапевт-невролог', 'Врач-рефлексотерапевт-невролог'), ('Врач-психиатр', 'Врач-психиатр'), ('Врач-психиатр-нарколог', 'Врач-психиатр-нарколог'), ('Врач-гематолог', 'Врач-гематолог'), ('Врач-ревматолог', 'Врач-ревматолог'), ('Врач-офтальмолог', 'Врач-офтальмолог'), ('Врач-уролог', 'Врач-уролог'), ('Врач-акушер-гинеколог', 'Врач-акушер-гинеколог'), ('Врач-дерматовенеролог', 'Врач-дерматовенеролог'), ('Врач-функциональной диагностики', 'Врач-функциональной диагностики'), ('Фельдшер военно-врачебной комиссии', 'Фельдшер военно-врачебной комиссии'), ('Медицинская сестра военно-врачебной комиссии', 'Медицинская сестра военно-врачебной комиссии'), ('Медицинская сестра хирургического отделения', 'Медицинская сестра хирургического отделения'), ('Медицинская сестра отоларингологического отделения', 'Медицинская сестра отоларингологического отделения'), ('Медицинская сестра процедурного кабинета', 'Медицинская сестра процедурного кабинета'), ('Медицинская сестра неврологического отделения', 'Медицинская сестра неврологического отделения'), ('Медицинская сестра кожно-венерологического отделения', 'Медицинская сестра кожно-венерологического отделения'), ('Медицинская сестра диспансерного отделения', 'Медицинская сестра диспансерного отделения'), ('Медицинская сестра консультативногоотделения', 'Медицинская сестра консультативногоотделения'), ('Медицинская сестра палатная (постовая) госпитальногоотделения', 'Медицинская сестра палатная (постовая) госпитальногоотделения'), ('Медицинская сестра физиотерапевтического отделения', 'Медицинская сестра физиотерапевтического отделения'), ('Медицинская сестра отделения функциональной диагностики', 'Медицинская сестра отделения функциональной диагностики'), (' Рентгенолаборант', ' Рентгенолаборант'), ('Медицинский регистратор', 'Медицинский регистратор'), ('Санитарка хирургического отделения', 'Санитарка хирургического отделения')], max_length=300)),
                ('department', models.CharField(max_length=43)),
                ('experience', models.DateField(verbose_name='опыт работы')),
                ('shift_start', models.DateTimeField(auto_now_add=True)),
                ('shift_end', models.DateField(auto_now=True)),
                ('working_days', multiselectfield.db.fields.MultiSelectField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=43)),
                ('price', models.PositiveIntegerField(default=0)),
                ('national_hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_hospital', to='hosp.nationalhospital')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors_Profile',
            },
            bases=('hosp.profile',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('emergency_contact', models.CharField(blank=True, max_length=98, null=True)),
                ('blood_type', multiselectfield.db.fields.MultiSelectField(choices=[('Бомбейский фенотип (hh)', 'Бомбейский фенотип (hh)'), ('Золотая кровь (Rh-нулевой)', 'Золотая кровь (Rh-нулевой)'), ('Группа крови О−', 'Группа крови О−'), ('Группа крови О+', 'Группа крови О+'), ('Группа крови А−', 'Группа крови А−'), ('Группа крови А+', 'Группа крови А+'), ('Группа крови Б−', 'Группа крови Б−'), ('Группа крови В+', 'Группа крови В+'), ('Группа крови АБ−', 'Группа крови АБ−'), ('Группа крови АБ+', 'Группа крови АБ+')], max_length=43)),
                ('allergies', models.CharField(blank=True, max_length=99, null=True)),
                ('national_hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_hospital', to='hosp.nationalhospital')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PatientProfile',
                'verbose_name_plural': 'Patient_Profile',
            },
            bases=('hosp.profile',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_info', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('national', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='hosp.nationalhospital')),
            ],
        ),
        migrations.CreateModel(
            name='NewsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='news_image/')),
                ('national_hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news_hospital', to='hosp.nationalhospital')),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=32)),
                ('product_image', models.ImageField(upload_to='product_image/')),
                ('price', models.PositiveSmallIntegerField()),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospital_product', to='hosp.nationalhospital')),
            ],
        ),
        migrations.CreateModel(
            name='Wards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ward_name', models.CharField(max_length=32)),
                ('ward_name_ru', models.CharField(max_length=32, null=True)),
                ('ward_name_en', models.CharField(max_length=32, null=True)),
                ('capacity', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='кол в полате')),
                ('ward_type', models.CharField(choices=[('simple', 'simple'), ('vip', 'vip')], default='simple', max_length=23)),
                ('national_hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wards_hospital', to='hosp.nationalhospital')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wards_patient', to='hosp.patientprofile')),
            ],
        ),
        migrations.CreateModel(
            name='StoreReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('command', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('national_hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospital_review', to='hosp.nationalhospital')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_review', to='hosp.patientprofile')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.CharField(max_length=43)),
                ('diagnosis_ru', models.CharField(max_length=43, null=True)),
                ('diagnosis_en', models.CharField(max_length=43, null=True)),
                ('treatment', models.CharField(max_length=43)),
                ('treatment_ru', models.CharField(max_length=43, null=True)),
                ('treatment_en', models.CharField(max_length=43, null=True)),
                ('prescribed_medication', models.CharField(max_length=43)),
                ('created_at', models.DateTimeField()),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_record', to='hosp.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_record', to='hosp.patientprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('comment', models.TextField(blank=True, null=True)),
                ('comment_ru', models.TextField(blank=True, null=True)),
                ('comment_en', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_feedback', to='hosp.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_feedback', to='hosp.patientprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('запланировано', 'запланировано'), ('завершено', 'завершено'), ('отменено', 'отменено')], default='запланировано', max_length=80)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_appoint', to='hosp.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_appoint', to='hosp.patientprofile')),
            ],
        ),
    ]
